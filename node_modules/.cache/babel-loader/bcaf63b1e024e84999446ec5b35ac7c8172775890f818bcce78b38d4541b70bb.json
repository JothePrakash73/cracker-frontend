{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jothe\\\\Downloads\\\\Cracker\\\\frontend\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Home.css\"; // Ensure this CSS file exists and is linked correctly\n\n// Import your images. Make sure these files exist in the './images/' directory\n// and that their filenames (including case and extension) match exactly.\n// IMPORTANT: For a slideshow, you typically want DIFFERENT images here.\nimport diwali1 from \"./images/diwali1.jpg\";\n// import diwali2 from \"./images/diwali2.jpg\"; // CHANGE THIS TO diwali2.jpg if you have it!\n// import diwali3 from \"./images/diwali3.jpg\"; // CHANGE THIS TO diwali3.jpg if you have it!\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const greetingText = \"Welcome to CrackerMart\";\n\n  // Use all your imported images for the slideshow\n  // If diwali2.jpg and diwali3.jpg are different images, use them here.\n  const images = [diwali1, diwali2, diwali3]; // Make sure these are different images!\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  // Slideshow auto change every 2.5 seconds (as set in previous update)\n  useEffect(() => {\n    const slideTimer = setInterval(() => {\n      setCurrentSlide(prev => (prev + 1) % images.length);\n    }, 2500); // Change slide every 2.5 seconds\n    return () => clearInterval(slideTimer);\n  }, [images.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"greeting-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"greeting-text-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: greetingText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: greetingText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slides\",\n        style: {\n          transform: `translateX(-${currentSlide * 100}%)`\n        },\n        children: images.map((src, idx) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: src,\n          alt: `Slide ${idx + 1}`,\n          className: \"slide\"\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dots\",\n        children: images.map((_, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `dot ${idx === currentSlide ? \"active\" : \"\"}`,\n          onClick: () => setCurrentSlide(idx),\n          \"aria-label\": `Go to slide ${idx + 1}`\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"/jm+XmndjAYlDCFyCnfFEXJOloU=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","diwali1","jsxDEV","_jsxDEV","Home","_s","greetingText","images","diwali2","diwali3","currentSlide","setCurrentSlide","slideTimer","setInterval","prev","length","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","map","src","idx","alt","_","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jothe/Downloads/Cracker/frontend/src/pages/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Home.css\"; // Ensure this CSS file exists and is linked correctly\r\n\r\n// Import your images. Make sure these files exist in the './images/' directory\r\n// and that their filenames (including case and extension) match exactly.\r\n// IMPORTANT: For a slideshow, you typically want DIFFERENT images here.\r\nimport diwali1 from \"./images/diwali1.jpg\";\r\n// import diwali2 from \"./images/diwali2.jpg\"; // CHANGE THIS TO diwali2.jpg if you have it!\r\n// import diwali3 from \"./images/diwali3.jpg\"; // CHANGE THIS TO diwali3.jpg if you have it!\r\n\r\nexport default function Home() {\r\n  const greetingText = \"Welcome to CrackerMart\";\r\n\r\n  // Use all your imported images for the slideshow\r\n  // If diwali2.jpg and diwali3.jpg are different images, use them here.\r\n  const images = [diwali1, diwali2, diwali3]; // Make sure these are different images!\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n  // Slideshow auto change every 2.5 seconds (as set in previous update)\r\n  useEffect(() => {\r\n    const slideTimer = setInterval(() => {\r\n      setCurrentSlide((prev) => (prev + 1) % images.length);\r\n    }, 2500); // Change slide every 2.5 seconds\r\n    return () => clearInterval(slideTimer);\r\n  }, [images.length]);\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      {/* Container for the continuous text animation */}\r\n      <div className=\"greeting-wrapper\">\r\n        <div className=\"greeting-text-inner\">\r\n          <span>{greetingText}</span> {/* First instance of the text */}\r\n          <span>{greetingText}</span> {/* Second instance for seamless looping */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"slideshow\">\r\n        <div\r\n          className=\"slides\"\r\n          style={{ transform: `translateX(-${currentSlide * 100}%)` }}\r\n        >\r\n          {images.map((src, idx) => (\r\n            <img key={idx} src={src} alt={`Slide ${idx + 1}`} className=\"slide\" />\r\n          ))}\r\n        </div>\r\n        <div className=\"dots\">\r\n          {images.map((_, idx) => (\r\n            <span\r\n              key={idx}\r\n              className={`dot ${idx === currentSlide ? \"active\" : \"\"}`}\r\n              onClick={() => setCurrentSlide(idx)}\r\n              aria-label={`Go to slide ${idx + 1}`}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}