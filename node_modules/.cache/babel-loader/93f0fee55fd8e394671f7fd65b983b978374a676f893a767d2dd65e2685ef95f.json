{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jothe\\\\Downloads\\\\Cracker\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Login from './pages/Login';\nimport Products from './pages/Products';\nimport Cart from './pages/Cart';\nimport CartDrawer from './components/CartDrawer';\nimport './App.css';\n\n// Reducer for managing cart state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      {\n        const product = action.payload;\n        const existingItem = state.cartItems.find(item => item._id === product._id);\n        if (existingItem) {\n          return {\n            ...state,\n            cartItems: state.cartItems.map(item => item._id === product._id ? {\n              ...item,\n              quantity: Math.min(item.quantity + 1, 100) // Cap quantity at 100\n            } : item)\n          };\n        } else {\n          return {\n            ...state,\n            cartItems: [...state.cartItems, {\n              ...product,\n              quantity: 1\n            }]\n          };\n        }\n      }\n    case 'REMOVE_ITEM':\n      {\n        const idToRemove = action.payload.id;\n        return {\n          ...state,\n          cartItems: state.cartItems.filter(item => item._id !== idToRemove)\n        };\n      }\n    case 'UPDATE_QUANTITY':\n      {\n        const {\n          id,\n          quantity\n        } = action.payload;\n        // Remove item if quantity drops to 0 or below\n        if (quantity <= 0) {\n          return {\n            ...state,\n            cartItems: state.cartItems.filter(item => item._id !== id)\n          };\n        }\n        // Ignore if quantity exceeds 100\n        if (quantity > 100) {\n          return state;\n        }\n        return {\n          ...state,\n          cartItems: state.cartItems.map(item => item._id === id ? {\n            ...item,\n            quantity\n          } : item)\n        };\n      }\n\n    // New action to clear the cart after submission\n    case 'CLEAR_CART':\n      {\n        return {\n          ...state,\n          cartItems: []\n        };\n      }\n    default:\n      return state;\n  }\n};\nfunction App() {\n  _s();\n  const initialState = {\n    cartItems: []\n  };\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  // State for controlling the cart drawer's open/close status\n  const [isCartOpen, setCartOpen] = useState(false);\n  // New state to lock/unlock cart interactions after an order is placed\n  const [isCartLocked, setCartLocked] = useState(false);\n\n  // Handles adding a product to the cart\n  const handleAddToCart = useCallback(product => {\n    if (!isCartLocked) {\n      // Only allow adding if cart is not locked\n      dispatch({\n        type: 'ADD_ITEM',\n        payload: product\n      });\n      setCartOpen(true); // Open the drawer on add\n    } else {\n      console.log(\"Cart is locked. Cannot add new items.\"); // Replace with a user-friendly message\n    }\n  }, [isCartLocked]); // Dependency on isCartLocked\n\n  // Handles removing an item from the cart\n  const handleRemoveFromCart = useCallback(id => {\n    if (!isCartLocked) {\n      // Only allow removal if cart is not locked\n      dispatch({\n        type: 'REMOVE_ITEM',\n        payload: {\n          id\n        }\n      });\n    } else {\n      console.log(\"Cart is locked. Cannot remove items.\");\n    }\n  }, [isCartLocked]); // Dependency on isCartLocked\n\n  // Handles updating the quantity of an item in the cart\n  const handleUpdateQuantity = useCallback((id, newQuantity) => {\n    if (!isCartLocked) {\n      // Only allow quantity updates if cart is not locked\n      if (newQuantity >= 1 && newQuantity <= 100) {\n        dispatch({\n          type: 'UPDATE_QUANTITY',\n          payload: {\n            id,\n            quantity: newQuantity\n          }\n        });\n      }\n    } else {\n      console.log(\"Cart is locked. Cannot update quantity.\");\n    }\n  }, [isCartLocked]); // Dependency on isCartLocked\n\n  // Calculates the total number of items in the cart\n  const getTotalCartItems = () => {\n    var _state$cartItems;\n    return (state === null || state === void 0 ? void 0 : (_state$cartItems = state.cartItems) === null || _state$cartItems === void 0 ? void 0 : _state$cartItems.reduce((total, item) => total + item.quantity, 0)) || 0;\n  };\n\n  // Callback for when an order is successfully submitted from the CartDrawer\n  const handleOrderSubmitted = useCallback(() => {\n    setCartLocked(true); // Lock the cart\n    // Optionally, clear the cart after submission\n    // dispatch({ type: 'CLEAR_CART' });\n  }, []);\n\n  // Callback for when the user wants to add more items after submission\n  const handleAddMoreItems = useCallback(() => {\n    setCartLocked(false); // Unlock the cart\n    setCartOpen(false); // Optionally close the drawer\n  }, []);\n\n  // This function was originally for a Google Pay link; keeping it as is based on provided code.\n  const handlePurchase = () => {\n    const totalAmount = state.cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    const amountStr = totalAmount.toFixed(2);\n    const gpayUrl = `https://pay.google.com/gp/p/ui/pay?amount=${amountStr}&currency=INR`;\n    window.open(gpayUrl, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      cartItemCount: getTotalCartItems(),\n      onCartClick: () => setCartOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/products\"\n          // Pass isCartLocked to Products to disable \"Add to Cart\"\n          ,\n          element: /*#__PURE__*/_jsxDEV(Products, {\n            onAddToCart: handleAddToCart,\n            isCartLocked: isCartLocked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart\",\n          element: /*#__PURE__*/_jsxDEV(Cart, {\n            cartItems: state.cartItems,\n            onRemoveFromCart: handleRemoveFromCart,\n            onUpdateQuantity: handleUpdateQuantity\n            // Pass isCartLocked to Cart to disable item interactions\n            ,\n            isCartLocked: isCartLocked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartDrawer, {\n      isOpen: isCartOpen,\n      onClose: () => setCartOpen(false),\n      cartItems: state.cartItems,\n      onRemoveFromCart: handleRemoveFromCart,\n      onUpdateQuantity: handleUpdateQuantity,\n      onPurchase: handlePurchase // This prop might be redundant if WhatsApp is the primary\n      // Pass the cart locked state and callbacks for state changes\n      ,\n      isCartLocked: isCartLocked,\n      onOrderSubmitted: handleOrderSubmitted,\n      onAddMoreItems: handleAddMoreItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5vqjiQQnquy08eX6oACkd9/VvBo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useReducer","useState","useCallback","BrowserRouter","Router","Routes","Route","Navbar","Home","About","Login","Products","Cart","CartDrawer","jsxDEV","_jsxDEV","cartReducer","state","action","type","product","payload","existingItem","cartItems","find","item","_id","map","quantity","Math","min","idToRemove","id","filter","App","_s","initialState","dispatch","isCartOpen","setCartOpen","isCartLocked","setCartLocked","handleAddToCart","console","log","handleRemoveFromCart","handleUpdateQuantity","newQuantity","getTotalCartItems","_state$cartItems","reduce","total","handleOrderSubmitted","handleAddMoreItems","handlePurchase","totalAmount","sum","price","amountStr","toFixed","gpayUrl","window","open","children","cartItemCount","onCartClick","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","onAddToCart","onRemoveFromCart","onUpdateQuantity","isOpen","onClose","onPurchase","onOrderSubmitted","onAddMoreItems","_c","$RefreshReg$"],"sources":["C:/Users/jothe/Downloads/Cracker/frontend/src/App.jsx"],"sourcesContent":["import React, { useReducer, useState, useCallback } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './pages/Home';\r\nimport About from './pages/About';\r\nimport Login from './pages/Login';\r\nimport Products from './pages/Products';\r\nimport Cart from './pages/Cart';\r\nimport CartDrawer from './components/CartDrawer';\r\nimport './App.css';\r\n\r\n// Reducer for managing cart state\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM': {\r\n      const product = action.payload;\r\n      const existingItem = state.cartItems.find(item => item._id === product._id);\r\n      if (existingItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map(item =>\r\n            item._id === product._id\r\n              ? {\r\n                  ...item,\r\n                  quantity: Math.min(item.quantity + 1, 100), // Cap quantity at 100\r\n                }\r\n              : item\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, { ...product, quantity: 1 }],\r\n        };\r\n      }\r\n    }\r\n\r\n    case 'REMOVE_ITEM': {\r\n      const idToRemove = action.payload.id;\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(item => item._id !== idToRemove),\r\n      };\r\n    }\r\n\r\n    case 'UPDATE_QUANTITY': {\r\n      const { id, quantity } = action.payload;\r\n      // Remove item if quantity drops to 0 or below\r\n      if (quantity <= 0) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.filter(item => item._id !== id),\r\n        };\r\n      }\r\n      // Ignore if quantity exceeds 100\r\n      if (quantity > 100) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.map(item =>\r\n          item._id === id ? { ...item, quantity } : item\r\n        ),\r\n      };\r\n    }\r\n\r\n    // New action to clear the cart after submission\r\n    case 'CLEAR_CART': {\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const initialState = { cartItems: [] };\r\n  const [state, dispatch] = useReducer(cartReducer, initialState);\r\n\r\n  // State for controlling the cart drawer's open/close status\r\n  const [isCartOpen, setCartOpen] = useState(false);\r\n  // New state to lock/unlock cart interactions after an order is placed\r\n  const [isCartLocked, setCartLocked] = useState(false);\r\n\r\n  // Handles adding a product to the cart\r\n  const handleAddToCart = useCallback((product) => {\r\n    if (!isCartLocked) { // Only allow adding if cart is not locked\r\n      dispatch({ type: 'ADD_ITEM', payload: product });\r\n      setCartOpen(true); // Open the drawer on add\r\n    } else {\r\n      console.log(\"Cart is locked. Cannot add new items.\"); // Replace with a user-friendly message\r\n    }\r\n  }, [isCartLocked]); // Dependency on isCartLocked\r\n\r\n  // Handles removing an item from the cart\r\n  const handleRemoveFromCart = useCallback((id) => {\r\n    if (!isCartLocked) { // Only allow removal if cart is not locked\r\n      dispatch({ type: 'REMOVE_ITEM', payload: { id } });\r\n    } else {\r\n      console.log(\"Cart is locked. Cannot remove items.\");\r\n    }\r\n  }, [isCartLocked]); // Dependency on isCartLocked\r\n\r\n  // Handles updating the quantity of an item in the cart\r\n  const handleUpdateQuantity = useCallback((id, newQuantity) => {\r\n    if (!isCartLocked) { // Only allow quantity updates if cart is not locked\r\n      if (newQuantity >= 1 && newQuantity <= 100) {\r\n        dispatch({ type: 'UPDATE_QUANTITY', payload: { id, quantity: newQuantity } });\r\n      }\r\n    } else {\r\n      console.log(\"Cart is locked. Cannot update quantity.\");\r\n    }\r\n  }, [isCartLocked]); // Dependency on isCartLocked\r\n\r\n  // Calculates the total number of items in the cart\r\n  const getTotalCartItems = () => {\r\n    return state?.cartItems?.reduce((total, item) => total + item.quantity, 0) || 0;\r\n  };\r\n\r\n  // Callback for when an order is successfully submitted from the CartDrawer\r\n  const handleOrderSubmitted = useCallback(() => {\r\n    setCartLocked(true); // Lock the cart\r\n    // Optionally, clear the cart after submission\r\n    // dispatch({ type: 'CLEAR_CART' });\r\n  }, []);\r\n\r\n  // Callback for when the user wants to add more items after submission\r\n  const handleAddMoreItems = useCallback(() => {\r\n    setCartLocked(false); // Unlock the cart\r\n    setCartOpen(false); // Optionally close the drawer\r\n  }, []);\r\n\r\n  // This function was originally for a Google Pay link; keeping it as is based on provided code.\r\n  const handlePurchase = () => {\r\n    const totalAmount = state.cartItems.reduce(\r\n      (sum, item) => sum + item.price * item.quantity,\r\n      0\r\n    );\r\n\r\n    const amountStr = totalAmount.toFixed(2);\r\n    const gpayUrl = `https://pay.google.com/gp/p/ui/pay?amount=${amountStr}&currency=INR`;\r\n\r\n    window.open(gpayUrl, '_blank');\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar cartItemCount={getTotalCartItems()} onCartClick={() => setCartOpen(true)} />\r\n\r\n      <div className=\"main-content\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/about\" element={<About />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route\r\n            path=\"/products\"\r\n            // Pass isCartLocked to Products to disable \"Add to Cart\"\r\n            element={<Products onAddToCart={handleAddToCart} isCartLocked={isCartLocked} />}\r\n          />\r\n          <Route\r\n            path=\"/cart\"\r\n            element={\r\n              <Cart\r\n                cartItems={state.cartItems}\r\n                onRemoveFromCart={handleRemoveFromCart}\r\n                onUpdateQuantity={handleUpdateQuantity}\r\n                // Pass isCartLocked to Cart to disable item interactions\r\n                isCartLocked={isCartLocked}\r\n              />\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n\r\n      <CartDrawer\r\n        isOpen={isCartOpen}\r\n        onClose={() => setCartOpen(false)}\r\n        cartItems={state.cartItems}\r\n        onRemoveFromCart={handleRemoveFromCart}\r\n        onUpdateQuantity={handleUpdateQuantity}\r\n        onPurchase={handlePurchase} // This prop might be redundant if WhatsApp is the primary\r\n        // Pass the cart locked state and callbacks for state changes\r\n        isCartLocked={isCartLocked}\r\n        onOrderSubmitted={handleOrderSubmitted}\r\n        onAddMoreItems={handleAddMoreItems}\r\n      />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}